on:
  pull_request:
    branches:
      - main
      - dev
  push:
    branches:
      - main
      - dev
name: "Build & Release"
jobs:
  build:
    name: Build & Release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v1
        with:
          distribution: "zulu"
          java-version: "12"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
          architecture: x64
      - run: flutter pub get
      - run: flutter analyze

      # - run: |
      #     flutter build apk --release --split-per-abi
  build_ios:
    name: Build Flutter (iOS)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter clean
      - run: |
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload

  build_apk:
    name: Build Flutter (Android)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter clean
      - run: flutter build apk --release

      - name: Extract Flutter Version
        run: |
          flutter_version=$(grep 'version:' pubspec.yaml | cut -d ':' -f2 | tr -d ' ')
          echo "Extracted Flutter version: $flutter_version"
      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*,build/ios/iphoneos/app.ipa"
          tag: "v${flutter_version}" # Use the extracted version here
          token: ${{ secrets.TOKEN }}
